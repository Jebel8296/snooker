<beans:beans xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:context="http://www.springframework.org/schema/context"
             xmlns:tx="http://www.springframework.org/schema/tx"
             xmlns:aop="http://www.springframework.org/schema/aop"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans.xsd
                        http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context.xsd
                        http://www.springframework.org/schema/tx
                        http://www.springframework.org/schema/tx/spring-tx.xsd
                        http://www.springframework.org/schema/aop
                        http://www.springframework.org/schema/aop/spring-aop.xsd">

    <context:property-placeholder location="classpath*:application.properties"/>
    <context:component-scan base-package="com.mstx.framework"/>

    <beans:bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init"
                destroy-method="close">
        <beans:property name="driverClassName" value="${jdbc.driverClassName}"></beans:property>
        <beans:property name="url" value="${jdbc.url}"></beans:property>
        <beans:property name="username" value="${jdbc.username}"></beans:property>
        <beans:property name="password" value="${jdbc.password}"></beans:property>

        <beans:property name="initialSize" value="${jdbc.initialSize}"></beans:property>
        <beans:property name="maxActive" value="${jdbc.maxActive}"></beans:property>
        <beans:property name="maxWait" value="${jdbc.maxWait}"></beans:property>
        <beans:property name="minIdle" value="${jdbc.minIdle}"></beans:property>
    </beans:bean>

    <beans:bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <beans:property name="dataSource" ref="dataSource"></beans:property>
        <beans:property name="mapperLocations" value="classpath:sqlMapper/*.xml"></beans:property>
        <beans:property name="typeAliasesPackage" value="com.mstx.framework.user.model"></beans:property>
        <beans:property name="plugins">
            <beans:array>
                <beans:bean class="com.github.pagehelper.PageInterceptor">
                    <beans:property name="properties">
                        <beans:value>
                            helperDialect=oracle
                        </beans:value>
                    </beans:property>
                </beans:bean>
            </beans:array>
        </beans:property>
    </beans:bean>

    <beans:bean class="tk.mybatis.spring.mapper.MapperScannerConfigurer">
        <beans:property name="basePackage" value="com.mstx.framework.user.mapper"></beans:property>
    </beans:bean>

    <beans:bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate" scope="prototype">
        <beans:constructor-arg index="0" ref="sqlSessionFactory"></beans:constructor-arg>
    </beans:bean>

    <aop:aspectj-autoproxy/>

    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="select*" read-only="true"/>
            <tx:method name="search*" read-only="true"/>
            <tx:method name="find*" read-only="true"/>
            <tx:method name="get*" read-only="true"/>
            <tx:method name="*" propagation="REQUIRED" rollback-for="Exception"/>
        </tx:attributes>
    </tx:advice>
    <aop:config>
        <aop:pointcut id="appService" expression="execution(* com.mstx.framework.user.service..*Service*.*(..))"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="appService"/>
    </aop:config>

    <beans:bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <beans:property name="dataSource" ref="dataSource"></beans:property>
    </beans:bean>

</beans:beans>